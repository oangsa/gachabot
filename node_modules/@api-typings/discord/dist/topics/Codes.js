"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LobbyError = exports.VoiceOPCode = exports.VoiceCloseCode = exports.DispatchErrorCode = exports.RPCErrorCode = exports.RPCCloseCode = exports.JSONErrorCode = exports.GatewayOPCode = exports.GatewayCloseCode = void 0;
/**
 * Your connection to the gateway may sometimes close. When it does, you will
 * receive a close code that tells you what happened.
 *
 * @source {@link https://discord.com/developers/docs/topics/opcodes-and-status-codes#gateway-gateway-close-event-codes|Opcodes and Status Codes}
 */
var GatewayCloseCode;
(function (GatewayCloseCode) {
    GatewayCloseCode[GatewayCloseCode["UnknownError"] = 4000] = "UnknownError";
    GatewayCloseCode[GatewayCloseCode["UnknownOPCode"] = 4001] = "UnknownOPCode";
    /**
     * An invalid payload was sent.
     */
    GatewayCloseCode[GatewayCloseCode["DecodeError"] = 4002] = "DecodeError";
    /**
     * A payload was sent prior to identifying.
     */
    GatewayCloseCode[GatewayCloseCode["NotAuthenticated"] = 4003] = "NotAuthenticated";
    /**
     * The account token sent with your identify payload is incorrect.
     */
    GatewayCloseCode[GatewayCloseCode["AuthenticationFailed"] = 4004] = "AuthenticationFailed";
    GatewayCloseCode[GatewayCloseCode["AlreadyAuthenticated"] = 4005] = "AlreadyAuthenticated";
    /**
     * The sequence sent when resuming the session was invalid. Reconnect and
     * start a new session.
     */
    GatewayCloseCode[GatewayCloseCode["InvalidSequence"] = 4007] = "InvalidSequence";
    /**
     * Payloads are being sent too quickly. You will be disconnected on
     * receiving this.
     */
    GatewayCloseCode[GatewayCloseCode["RateLimited"] = 4008] = "RateLimited";
    GatewayCloseCode[GatewayCloseCode["SessionTimedOut"] = 4009] = "SessionTimedOut";
    GatewayCloseCode[GatewayCloseCode["InvalidShard"] = 4010] = "InvalidShard";
    GatewayCloseCode[GatewayCloseCode["ShardingRequired"] = 4011] = "ShardingRequired";
    GatewayCloseCode[GatewayCloseCode["InvalidAPIVersion"] = 4012] = "InvalidAPIVersion";
    GatewayCloseCode[GatewayCloseCode["InvalidIntents"] = 4013] = "InvalidIntents";
    GatewayCloseCode[GatewayCloseCode["DisallowedIntents"] = 4014] = "DisallowedIntents";
})(GatewayCloseCode = exports.GatewayCloseCode || (exports.GatewayCloseCode = {}));
/**
 * All gateway events in Discord are tagged with an opcode that denotes the
 * payload type.
 *
 * @source {@link https://discord.com/developers/docs/topics/opcodes-and-status-codes#gateway-gateway-opcodes|Opcodes and Status Codes}
 */
var GatewayOPCode;
(function (GatewayOPCode) {
    /**
     * An event was dispatched. The client can receive this action.
     */
    GatewayOPCode[GatewayOPCode["Dispatch"] = 0] = "Dispatch";
    /**
     * Fired periodically by the client to keep the connection alive. The client
     * can send and receive this action.
     */
    GatewayOPCode[GatewayOPCode["Heartbeat"] = 1] = "Heartbeat";
    /**
     * Starts a new session during the initial handshake. The client can send
     * this action.
     */
    GatewayOPCode[GatewayOPCode["Identify"] = 2] = "Identify";
    /**
     * Update the client's presence. The client can send this action.
     */
    GatewayOPCode[GatewayOPCode["PresenceUpdate"] = 3] = "PresenceUpdate";
    /**
     * Used to join/leave or move between voice channels. The client can send
     * this action.
     */
    GatewayOPCode[GatewayOPCode["VoiceStateUpdate"] = 4] = "VoiceStateUpdate";
    GatewayOPCode[GatewayOPCode["VoiceGuildPing"] = 5] = "VoiceGuildPing";
    /**
     * Resume a previous session that was disconnected. The client can send this
     * action.
     */
    GatewayOPCode[GatewayOPCode["Resume"] = 6] = "Resume";
    /**
     * You should attempt to reconnect and resume immediately. The client can
     * receive this action.
     */
    GatewayOPCode[GatewayOPCode["Reconnect"] = 7] = "Reconnect";
    /**
     * Request information about offline guild members in a large guild. The
     * client can send this action.
     */
    GatewayOPCode[GatewayOPCode["RequestGuildMembers"] = 8] = "RequestGuildMembers";
    /**
     * The session has been invalidated. You should reconnect and identify/
     * resume accordingly. The client can receive this action.
     */
    GatewayOPCode[GatewayOPCode["InvalidSession"] = 9] = "InvalidSession";
    /**
     * Sent immediately after connecting, contains the `heartbeat_interval` to
     * use. The client can receive this action.
     */
    GatewayOPCode[GatewayOPCode["Hello"] = 10] = "Hello";
    /**
     * Sent in response to receiving a heartbeat to acknowledge that it has been
     * received. The client can receive this action.
     */
    GatewayOPCode[GatewayOPCode["HeartbeatAck"] = 11] = "HeartbeatAck";
})(GatewayOPCode = exports.GatewayOPCode || (exports.GatewayOPCode = {}));
/**
 * The API can return more detailed error codes through a `code` key in a JSON
 * error response. The response will also contain a `message` key containing a
 * more friendly error string.
 *
 * @source {@link https://discord.com/developers/docs/topics/opcodes-and-status-codes#json-json-error-codes|Opcodes and Status Codes}
 */
var JSONErrorCode;
(function (JSONErrorCode) {
    /**
     * General error (such as a malformed request body, amongst other things).
     */
    JSONErrorCode[JSONErrorCode["General"] = 0] = "General";
    JSONErrorCode[JSONErrorCode["UnknownAccount"] = 10001] = "UnknownAccount";
    JSONErrorCode[JSONErrorCode["UnknownApplication"] = 10002] = "UnknownApplication";
    JSONErrorCode[JSONErrorCode["UnknownChannel"] = 10003] = "UnknownChannel";
    JSONErrorCode[JSONErrorCode["UnknownGuild"] = 10004] = "UnknownGuild";
    JSONErrorCode[JSONErrorCode["UnknownIntegration"] = 10005] = "UnknownIntegration";
    JSONErrorCode[JSONErrorCode["UnknownInvite"] = 10006] = "UnknownInvite";
    JSONErrorCode[JSONErrorCode["UnknownMember"] = 10007] = "UnknownMember";
    JSONErrorCode[JSONErrorCode["UnknownMessage"] = 10008] = "UnknownMessage";
    JSONErrorCode[JSONErrorCode["UnknownOverwrite"] = 10009] = "UnknownOverwrite";
    JSONErrorCode[JSONErrorCode["UnknownPlatform"] = 10010] = "UnknownPlatform";
    JSONErrorCode[JSONErrorCode["UnknownRole"] = 10011] = "UnknownRole";
    JSONErrorCode[JSONErrorCode["UnknownToken"] = 10012] = "UnknownToken";
    JSONErrorCode[JSONErrorCode["UnknownUser"] = 10013] = "UnknownUser";
    JSONErrorCode[JSONErrorCode["UnknownEmoji"] = 10014] = "UnknownEmoji";
    JSONErrorCode[JSONErrorCode["UnknownWebhook"] = 10015] = "UnknownWebhook";
    JSONErrorCode[JSONErrorCode["UnknownWebhookService"] = 10016] = "UnknownWebhookService";
    JSONErrorCode[JSONErrorCode["UnknownSession"] = 10017] = "UnknownSession";
    JSONErrorCode[JSONErrorCode["UnknownBan"] = 10026] = "UnknownBan";
    JSONErrorCode[JSONErrorCode["UnknownSKU"] = 10027] = "UnknownSKU";
    JSONErrorCode[JSONErrorCode["UnknownStoreListing"] = 10028] = "UnknownStoreListing";
    JSONErrorCode[JSONErrorCode["UnknownEntitlement"] = 10029] = "UnknownEntitlement";
    JSONErrorCode[JSONErrorCode["UnknownBuild"] = 10030] = "UnknownBuild";
    JSONErrorCode[JSONErrorCode["UnknownLobby"] = 10031] = "UnknownLobby";
    JSONErrorCode[JSONErrorCode["UnknownBranch"] = 10032] = "UnknownBranch";
    JSONErrorCode[JSONErrorCode["UnknownStoreDirectoryLayout"] = 10033] = "UnknownStoreDirectoryLayout";
    JSONErrorCode[JSONErrorCode["UnknownRedistributable"] = 10036] = "UnknownRedistributable";
    JSONErrorCode[JSONErrorCode["UnknownGiftCode"] = 10038] = "UnknownGiftCode";
    JSONErrorCode[JSONErrorCode["UnknownGuildTemplate"] = 10057] = "UnknownGuildTemplate";
    JSONErrorCode[JSONErrorCode["UnknownDiscoveryCategory"] = 10059] = "UnknownDiscoveryCategory";
    JSONErrorCode[JSONErrorCode["UnknownSticker"] = 10060] = "UnknownSticker";
    JSONErrorCode[JSONErrorCode["UnknownInteraction"] = 10062] = "UnknownInteraction";
    JSONErrorCode[JSONErrorCode["UnknownApplicationCommand"] = 10063] = "UnknownApplicationCommand";
    JSONErrorCode[JSONErrorCode["UnknownApplicationCommandPermissions"] = 10064] = "UnknownApplicationCommandPermissions";
    JSONErrorCode[JSONErrorCode["UnknownStageInstance"] = 10067] = "UnknownStageInstance";
    JSONErrorCode[JSONErrorCode["UnknownGuildMemberVerificationForm"] = 10068] = "UnknownGuildMemberVerificationForm";
    JSONErrorCode[JSONErrorCode["UnknownGuildWelcomeScreen"] = 10069] = "UnknownGuildWelcomeScreen";
    /**
     * Bots cannot use this endpoint.
     */
    JSONErrorCode[JSONErrorCode["BotDisallowed"] = 20001] = "BotDisallowed";
    /**
     * Only bots can use this endpoint.
     */
    JSONErrorCode[JSONErrorCode["BotRequired"] = 20002] = "BotRequired";
    JSONErrorCode[JSONErrorCode["RPCProxyDisallowed"] = 20003] = "RPCProxyDisallowed";
    /**
     * Explicit content cannot be sent to the desired recipient(s).
     */
    JSONErrorCode[JSONErrorCode["ExplicitContent"] = 20009] = "ExplicitContent";
    JSONErrorCode[JSONErrorCode["AccountScheduledForDeletion"] = 20011] = "AccountScheduledForDeletion";
    JSONErrorCode[JSONErrorCode["UserUnauthorizedForApplication"] = 20012] = "UserUnauthorizedForApplication";
    JSONErrorCode[JSONErrorCode["AccountDisabled"] = 20013] = "AccountDisabled";
    JSONErrorCode[JSONErrorCode["SlowmodeRateLimited"] = 20016] = "SlowmodeRateLimited";
    /**
     * Only the owner of this account can perform this action.
     */
    JSONErrorCode[JSONErrorCode["InvalidAccountOwner"] = 20018] = "InvalidAccountOwner";
    /**
     * This message cannot be edited due to announcement rate limits.
     */
    JSONErrorCode[JSONErrorCode["ChannelFollowingRateLimited"] = 20022] = "ChannelFollowingRateLimited";
    JSONErrorCode[JSONErrorCode["UnderMinimumAge"] = 20024] = "UnderMinimumAge";
    /**
     * The channel you are writing has hit the write rate limit.
     */
    JSONErrorCode[JSONErrorCode["ChannelRateLimited"] = 20028] = "ChannelRateLimited";
    /**
     * The Stage topic, server name, server description, or channel names
     * contain words that are not allowed.
     */
    JSONErrorCode[JSONErrorCode["InvalidWords"] = 20031] = "InvalidWords";
    /**
     * Guild premium subscription level too low.
     */
    JSONErrorCode[JSONErrorCode["InvalidGuildPremiumSubscriptionLevel"] = 20035] = "InvalidGuildPremiumSubscriptionLevel";
    /**
     * Maximum number of guilds reached (100).
     */
    JSONErrorCode[JSONErrorCode["TooManyGuilds"] = 30001] = "TooManyGuilds";
    /**
     * Maximum number of friends reached (1000).
     */
    JSONErrorCode[JSONErrorCode["TooManyFriends"] = 30002] = "TooManyFriends";
    /**
     * Maximum number of pins reached for the channel (50).
     */
    JSONErrorCode[JSONErrorCode["TooManyPinsInChannel"] = 30003] = "TooManyPinsInChannel";
    /**
     * Maximum number of recipients reached (10).
     */
    JSONErrorCode[JSONErrorCode["TooManyRecipients"] = 30004] = "TooManyRecipients";
    /**
     * Maximum number of guild roles reached (250).
     */
    JSONErrorCode[JSONErrorCode["TooManyGuildRoles"] = 30005] = "TooManyGuildRoles";
    JSONErrorCode[JSONErrorCode["TooManyUsingUsername"] = 30006] = "TooManyUsingUsername";
    /**
     * Maximum number of webhooks reached (10).
     */
    JSONErrorCode[JSONErrorCode["TooManyWebhooks"] = 30007] = "TooManyWebhooks";
    JSONErrorCode[JSONErrorCode["TooManyEmojis"] = 30008] = "TooManyEmojis";
    /**
     * Maximum number of reactions reached (20).
     */
    JSONErrorCode[JSONErrorCode["TooManyReactions"] = 30010] = "TooManyReactions";
    /**
     * Maximum number of channels reached (500).
     */
    JSONErrorCode[JSONErrorCode["TooManyChannels"] = 30013] = "TooManyChannels";
    /**
     * Maximum number of attachments in a message reached (10).
     */
    JSONErrorCode[JSONErrorCode["TooManyAttachments"] = 30015] = "TooManyAttachments";
    /**
     * Maximum number of invites reached (1000).
     */
    JSONErrorCode[JSONErrorCode["TooManyInvites"] = 30016] = "TooManyInvites";
    JSONErrorCode[JSONErrorCode["TooManyAnimatedEmojis"] = 30018] = "TooManyAnimatedEmojis";
    JSONErrorCode[JSONErrorCode["GuildAtCapacity"] = 30019] = "GuildAtCapacity";
    JSONErrorCode[JSONErrorCode["NotEnoughGuildMembers"] = 30029] = "NotEnoughGuildMembers";
    /**
     * Maximum number of server categories has been reached (5).
     */
    JSONErrorCode[JSONErrorCode["TooManyGuildCategories"] = 30030] = "TooManyGuildCategories";
    /**
     * Maximum number of guild discovery subcategories has been reached (5).
     */
    JSONErrorCode[JSONErrorCode["TooManyDiscoverySubcategories"] = 30031] = "TooManyDiscoverySubcategories";
    /**
     * Guild already has a template.
     */
    JSONErrorCode[JSONErrorCode["GuildTemplateExists"] = 30032] = "GuildTemplateExists";
    JSONErrorCode[JSONErrorCode["TooManyThreadMembers"] = 30033] = "TooManyThreadMembers";
    /**
     * Maximum number of bans for non-guild members have been exceeded.
     */
    JSONErrorCode[JSONErrorCode["TooManyNonGuildMemberBans"] = 30035] = "TooManyNonGuildMemberBans";
    JSONErrorCode[JSONErrorCode["TooManyBanFetches"] = 30037] = "TooManyBanFetches";
    JSONErrorCode[JSONErrorCode["TooManyStickers"] = 30039] = "TooManyStickers";
    /**
     * Maximum number of prune requests has been reached. Try again later.
     */
    JSONErrorCode[JSONErrorCode["TooManyPruneRequests"] = 30040] = "TooManyPruneRequests";
    JSONErrorCode[JSONErrorCode["Unauthorized"] = 40001] = "Unauthorized";
    JSONErrorCode[JSONErrorCode["EmailVerificationRequired"] = 40002] = "EmailVerificationRequired";
    JSONErrorCode[JSONErrorCode["DMOpenRateLimited"] = 40003] = "DMOpenRateLimited";
    JSONErrorCode[JSONErrorCode["SendMessageTemporarilyDisabled"] = 40004] = "SendMessageTemporarilyDisabled";
    JSONErrorCode[JSONErrorCode["RequestEntityTooLarge"] = 40005] = "RequestEntityTooLarge";
    JSONErrorCode[JSONErrorCode["FeatureTemporarilyDisabled"] = 40006] = "FeatureTemporarilyDisabled";
    JSONErrorCode[JSONErrorCode["UserBanned"] = 40007] = "UserBanned";
    JSONErrorCode[JSONErrorCode["ConnectionRevoked"] = 40012] = "ConnectionRevoked";
    JSONErrorCode[JSONErrorCode["DeleteAccountTransferTeamOwnership"] = 40028] = "DeleteAccountTransferTeamOwnership";
    JSONErrorCode[JSONErrorCode["UserNotConnectedToVoice"] = 40032] = "UserNotConnectedToVoice";
    JSONErrorCode[JSONErrorCode["MessageAlreadyCrossposted"] = 40033] = "MessageAlreadyCrossposted";
    JSONErrorCode[JSONErrorCode["ApplicationCommandNameExists"] = 40041] = "ApplicationCommandNameExists";
    JSONErrorCode[JSONErrorCode["InvalidAccess"] = 50001] = "InvalidAccess";
    JSONErrorCode[JSONErrorCode["InvalidAccountType"] = 50002] = "InvalidAccountType";
    /**
     * Cannot execute action on a DM channel.
     */
    JSONErrorCode[JSONErrorCode["InvalidDMAction"] = 50003] = "InvalidDMAction";
    /**
     * Guild widget disabled.
     */
    JSONErrorCode[JSONErrorCode["InvalidEmbedDisabled"] = 50004] = "InvalidEmbedDisabled";
    /**
     * Cannot edit a message authored by another user.
     */
    JSONErrorCode[JSONErrorCode["InvalidMessageAuthor"] = 50005] = "InvalidMessageAuthor";
    JSONErrorCode[JSONErrorCode["InvalidMessageEmpty"] = 50006] = "InvalidMessageEmpty";
    JSONErrorCode[JSONErrorCode["InvalidMessageSendUser"] = 50007] = "InvalidMessageSendUser";
    /**
     * Cannot send messages in a voice channel.
     */
    JSONErrorCode[JSONErrorCode["InvalidMessageSendNonText"] = 50008] = "InvalidMessageSendNonText";
    /**
     * Channel verification level is too high to gain access.
     */
    JSONErrorCode[JSONErrorCode["InvalidMessageVerificationLevel"] = 50009] = "InvalidMessageVerificationLevel";
    /**
     * OAuth2 application does not have a bot.
     */
    JSONErrorCode[JSONErrorCode["InvalidOAuthAppBot"] = 50010] = "InvalidOAuthAppBot";
    /**
     * OAuth2 application limit reached.
     */
    JSONErrorCode[JSONErrorCode["InvalidOAuthAppLimit"] = 50011] = "InvalidOAuthAppLimit";
    JSONErrorCode[JSONErrorCode["InvalidOAuthState"] = 50012] = "InvalidOAuthState";
    JSONErrorCode[JSONErrorCode["InvalidPermissions"] = 50013] = "InvalidPermissions";
    JSONErrorCode[JSONErrorCode["InvalidToken"] = 50014] = "InvalidToken";
    /**
     * Note was too long.
     */
    JSONErrorCode[JSONErrorCode["InvalidNote"] = 50015] = "InvalidNote";
    /**
     * Provided too few or too many messages to delete (`2 ≤ x ≤ 100`).
     */
    JSONErrorCode[JSONErrorCode["InvalidBulkDeleteCount"] = 50016] = "InvalidBulkDeleteCount";
    JSONErrorCode[JSONErrorCode["InvalidMFALevel"] = 50017] = "InvalidMFALevel";
    JSONErrorCode[JSONErrorCode["InvalidPassword"] = 50018] = "InvalidPassword";
    /**
     * A message can only be pinned to the channel it was sent in.
     */
    JSONErrorCode[JSONErrorCode["InvalidPinMessageChannel"] = 50019] = "InvalidPinMessageChannel";
    JSONErrorCode[JSONErrorCode["InvalidInviteCode"] = 50020] = "InvalidInviteCode";
    /**
     * Cannot execute action on a system message.
     */
    JSONErrorCode[JSONErrorCode["InvalidMessageAction"] = 50021] = "InvalidMessageAction";
    JSONErrorCode[JSONErrorCode["InvalidPhoneNumber"] = 50022] = "InvalidPhoneNumber";
    JSONErrorCode[JSONErrorCode["InvalidClientID"] = 50023] = "InvalidClientID";
    /**
     * Cannot execute action on this channel type.
     */
    JSONErrorCode[JSONErrorCode["InvalidChannelType"] = 50024] = "InvalidChannelType";
    JSONErrorCode[JSONErrorCode["InvalidOAuth2AccessToken"] = 50025] = "InvalidOAuth2AccessToken";
    JSONErrorCode[JSONErrorCode["InvalidOAuth2MissingScope"] = 50026] = "InvalidOAuth2MissingScope";
    JSONErrorCode[JSONErrorCode["InvalidWebhookToken"] = 50027] = "InvalidWebhookToken";
    JSONErrorCode[JSONErrorCode["InvalidRole"] = 50028] = "InvalidRole";
    JSONErrorCode[JSONErrorCode["InvalidRecipients"] = 50033] = "InvalidRecipients";
    /**
     * A message provided was too old to bulk delete (\> 14 days).
     */
    JSONErrorCode[JSONErrorCode["InvalidMessageAge"] = 50034] = "InvalidMessageAge";
    /**
     * Invalid form body (returned for both `application/json` and
     * `multipart/form-data` bodies), or invalid `Content-Type` provided.
     */
    JSONErrorCode[JSONErrorCode["InvalidFormBody"] = 50035] = "InvalidFormBody";
    /**
     * An invite was accepted to a guild the application's bot is not in.
     */
    JSONErrorCode[JSONErrorCode["InvalidGuildInvite"] = 50036] = "InvalidGuildInvite";
    JSONErrorCode[JSONErrorCode["InvalidAPIVersion"] = 50041] = "InvalidAPIVersion";
    /**
     * File uploaded exceeds the maximum size.
     */
    JSONErrorCode[JSONErrorCode["InvalidFileSize"] = 50045] = "InvalidFileSize";
    JSONErrorCode[JSONErrorCode["InvalidFileUploaded"] = 50046] = "InvalidFileUploaded";
    JSONErrorCode[JSONErrorCode["InvalidGiftRedemptionExhausted"] = 50050] = "InvalidGiftRedemptionExhausted";
    JSONErrorCode[JSONErrorCode["InvalidGiftRedemptionOwned"] = 50051] = "InvalidGiftRedemptionOwned";
    JSONErrorCode[JSONErrorCode["InvalidGiftSelfRedemption"] = 50054] = "InvalidGiftSelfRedemption";
    JSONErrorCode[JSONErrorCode["InvalidGiftPaymentSourceRequired"] = 50070] = "InvalidGiftPaymentSourceRequired";
    /**
     * Cannot delete a channel required for Community guilds.
     */
    JSONErrorCode[JSONErrorCode["RequiredCommunityChannel"] = 50074] = "RequiredCommunityChannel";
    JSONErrorCode[JSONErrorCode["InvalidStickerSent"] = 50081] = "InvalidStickerSent";
    /**
     * Tried to perform an operation on an archived thread.
     */
    JSONErrorCode[JSONErrorCode["InvalidThreadArchiveState"] = 50083] = "InvalidThreadArchiveState";
    JSONErrorCode[JSONErrorCode["InvalidThreadNotificationSettings"] = 50084] = "InvalidThreadNotificationSettings";
    /**
     * `before` value is earlier than the thread creation date.
     */
    JSONErrorCode[JSONErrorCode["InvalidBeforeThreadCreationDateValue"] = 50085] = "InvalidBeforeThreadCreationDateValue";
    JSONErrorCode[JSONErrorCode["MFAEnabled"] = 60001] = "MFAEnabled";
    JSONErrorCode[JSONErrorCode["MFADisabled"] = 60002] = "MFADisabled";
    JSONErrorCode[JSONErrorCode["MFARequired"] = 60003] = "MFARequired";
    JSONErrorCode[JSONErrorCode["MFAUnverified"] = 60004] = "MFAUnverified";
    JSONErrorCode[JSONErrorCode["MFAInvalidSecret"] = 60005] = "MFAInvalidSecret";
    JSONErrorCode[JSONErrorCode["MFAInvalidTicket"] = 60006] = "MFAInvalidTicket";
    JSONErrorCode[JSONErrorCode["MFAInvalidCode"] = 60007] = "MFAInvalidCode";
    JSONErrorCode[JSONErrorCode["MFAInvalidSession"] = 60008] = "MFAInvalidSession";
    JSONErrorCode[JSONErrorCode["PhoneNumberUnableToSend"] = 70003] = "PhoneNumberUnableToSend";
    JSONErrorCode[JSONErrorCode["PhoneVerificationRequired"] = 70007] = "PhoneVerificationRequired";
    JSONErrorCode[JSONErrorCode["RelationshipIncomingDisabled"] = 80000] = "RelationshipIncomingDisabled";
    JSONErrorCode[JSONErrorCode["RelationshipIncomingBlocked"] = 80001] = "RelationshipIncomingBlocked";
    JSONErrorCode[JSONErrorCode["RelationshipInvalidUserBot"] = 80002] = "RelationshipInvalidUserBot";
    JSONErrorCode[JSONErrorCode["RelationshipInvalidSelf"] = 80003] = "RelationshipInvalidSelf";
    JSONErrorCode[JSONErrorCode["RelationshipInvalidDiscordTag"] = 80004] = "RelationshipInvalidDiscordTag";
    JSONErrorCode[JSONErrorCode["RelationshipAlreadyFriends"] = 80007] = "RelationshipAlreadyFriends";
    JSONErrorCode[JSONErrorCode["ReactionBlocked"] = 90001] = "ReactionBlocked";
    JSONErrorCode[JSONErrorCode["InvalidGiftRedemptionSubscriptionManaged"] = 100021] = "InvalidGiftRedemptionSubscriptionManaged";
    JSONErrorCode[JSONErrorCode["InvalidGiftRedemptionSubscriptionIncompatible"] = 100023] = "InvalidGiftRedemptionSubscriptionIncompatible";
    JSONErrorCode[JSONErrorCode["InvalidGiftRedemptionInvoiceOpen"] = 100024] = "InvalidGiftRedemptionInvoiceOpen";
    JSONErrorCode[JSONErrorCode["ListingAlreadyJoined"] = 120000] = "ListingAlreadyJoined";
    JSONErrorCode[JSONErrorCode["ListingTooManyMembers"] = 120001] = "ListingTooManyMembers";
    JSONErrorCode[JSONErrorCode["ListingJoinBlocked"] = 120002] = "ListingJoinBlocked";
    JSONErrorCode[JSONErrorCode["APIResourceOverloaded"] = 130000] = "APIResourceOverloaded";
    JSONErrorCode[JSONErrorCode["StageAlreadyOpen"] = 150006] = "StageAlreadyOpen";
    JSONErrorCode[JSONErrorCode["ThreadAlreadyCreated"] = 160004] = "ThreadAlreadyCreated";
    JSONErrorCode[JSONErrorCode["ThreadLocked"] = 160005] = "ThreadLocked";
    JSONErrorCode[JSONErrorCode["TooManyThreads"] = 160006] = "TooManyThreads";
    JSONErrorCode[JSONErrorCode["TooManyAnnouncementThreads"] = 160007] = "TooManyAnnouncementThreads";
    /**
     * Invalid JSON for uploaded Lottie file.
     */
    JSONErrorCode[JSONErrorCode["InvalidLottieJSON"] = 170001] = "InvalidLottieJSON";
    /**
     * Uploaded Lotties cannot contain rasterized images such as `PNG` or
     * `JPEG`.
     */
    JSONErrorCode[JSONErrorCode["InvalidLottieRasterizedImage"] = 170002] = "InvalidLottieRasterizedImage";
    JSONErrorCode[JSONErrorCode["StickerFrameRateExceeded"] = 170003] = "StickerFrameRateExceeded";
    /**
     * Sticker frame count exceeds maximum of `1000` frames.
     */
    JSONErrorCode[JSONErrorCode["StickerFrameCountExceeded"] = 170004] = "StickerFrameCountExceeded";
    /**
     * Lottie animation maximum dimensions exceeded.
     */
    JSONErrorCode[JSONErrorCode["LottieAnimationDimensionsExceeded"] = 170005] = "LottieAnimationDimensionsExceeded";
    /**
     * Sticker frame rate is either too small or too large.
     */
    JSONErrorCode[JSONErrorCode["InvalidStickerFrameRate"] = 170006] = "InvalidStickerFrameRate";
    /**
     * Sticker animation duration exceeds maximum of `5` seconds.
     */
    JSONErrorCode[JSONErrorCode["StickerAnimationDurationExceeded"] = 170007] = "StickerAnimationDurationExceeded";
})(JSONErrorCode = exports.JSONErrorCode || (exports.JSONErrorCode = {}));
/**
 * @source {@link https://discord.com/developers/docs/topics/opcodes-and-status-codes#rpc-rpc-close-event-codes|Opcodes and Status Codes}
 */
var RPCCloseCode;
(function (RPCCloseCode) {
    /**
     * You connected to the RPC server with an invalid client ID.
     */
    RPCCloseCode[RPCCloseCode["InvalidClientID"] = 4000] = "InvalidClientID";
    /**
     * You connected to the RPC server with an invalid origin.
     */
    RPCCloseCode[RPCCloseCode["InvalidOrigin"] = 4001] = "InvalidOrigin";
    /**
     * You are being rate limited.
     */
    RPCCloseCode[RPCCloseCode["RateLimited"] = 4002] = "RateLimited";
    /**
     * The OAuth2 token associated with a connection was revoked.
     */
    RPCCloseCode[RPCCloseCode["TokenRevoked"] = 4003] = "TokenRevoked";
    /**
     * The RPC Server version specified in the connection string was not valid.
     */
    RPCCloseCode[RPCCloseCode["InvalidVersion"] = 4004] = "InvalidVersion";
    /**
     * The encoding specified in the connection string was not valid.
     */
    RPCCloseCode[RPCCloseCode["InvalidEncoding"] = 4005] = "InvalidEncoding";
})(RPCCloseCode = exports.RPCCloseCode || (exports.RPCCloseCode = {}));
/**
 * @source {@link https://discord.com/developers/docs/topics/opcodes-and-status-codes#rpc-rpc-error-codes|Opcodes and Status Codes}
 */
var RPCErrorCode;
(function (RPCErrorCode) {
    RPCErrorCode[RPCErrorCode["UnknownError"] = 1000] = "UnknownError";
    RPCErrorCode[RPCErrorCode["ServiceUnavailable"] = 1001] = "ServiceUnavailable";
    RPCErrorCode[RPCErrorCode["TransactionAborted"] = 1002] = "TransactionAborted";
    RPCErrorCode[RPCErrorCode["InvalidPayload"] = 4000] = "InvalidPayload";
    RPCErrorCode[RPCErrorCode["InvalidCommand"] = 4002] = "InvalidCommand";
    RPCErrorCode[RPCErrorCode["InvalidGuild"] = 4003] = "InvalidGuild";
    RPCErrorCode[RPCErrorCode["InvalidEvent"] = 4004] = "InvalidEvent";
    RPCErrorCode[RPCErrorCode["InvalidChannel"] = 4005] = "InvalidChannel";
    RPCErrorCode[RPCErrorCode["InvalidPermissions"] = 4006] = "InvalidPermissions";
    RPCErrorCode[RPCErrorCode["InvalidClientID"] = 4007] = "InvalidClientID";
    /**
     * An invalid OAuth2 application origin was used to authorize or
     * authenticate with.
     */
    RPCErrorCode[RPCErrorCode["InvalidOrigin"] = 4008] = "InvalidOrigin";
    /**
     * An invalid OAuth2 token was used to authorize or authenticate with.
     */
    RPCErrorCode[RPCErrorCode["InvalidToken"] = 4009] = "InvalidToken";
    RPCErrorCode[RPCErrorCode["InvalidUser"] = 4010] = "InvalidUser";
    RPCErrorCode[RPCErrorCode["InvalidInvite"] = 4011] = "InvalidInvite";
    RPCErrorCode[RPCErrorCode["InvalidActivityJoinRequest"] = 4012] = "InvalidActivityJoinRequest";
    RPCErrorCode[RPCErrorCode["InvalidLobby"] = 4013] = "InvalidLobby";
    RPCErrorCode[RPCErrorCode["InvalidLobbySecret"] = 4014] = "InvalidLobbySecret";
    RPCErrorCode[RPCErrorCode["InvalidEntitlement"] = 4015] = "InvalidEntitlement";
    RPCErrorCode[RPCErrorCode["InvalidGiftCode"] = 4016] = "InvalidGiftCode";
    RPCErrorCode[RPCErrorCode["InvalidGuildTemplate"] = 4017] = "InvalidGuildTemplate";
    RPCErrorCode[RPCErrorCode["OAuth2Error"] = 5000] = "OAuth2Error";
    RPCErrorCode[RPCErrorCode["SelectChannelTimedOut"] = 5001] = "SelectChannelTimedOut";
    RPCErrorCode[RPCErrorCode["GetGuildTimedOut"] = 5002] = "GetGuildTimedOut";
    /**
     * You tried to join a user to a voice channel but the user was already in
     * one.
     */
    RPCErrorCode[RPCErrorCode["SelectVoiceForceRequired"] = 5003] = "SelectVoiceForceRequired";
    RPCErrorCode[RPCErrorCode["CaptureShortcutAlreadyListening"] = 5004] = "CaptureShortcutAlreadyListening";
    RPCErrorCode[RPCErrorCode["InvalidActivitySecret"] = 5005] = "InvalidActivitySecret";
    RPCErrorCode[RPCErrorCode["NoEligibleActivity"] = 5006] = "NoEligibleActivity";
    RPCErrorCode[RPCErrorCode["LobbyFull"] = 5007] = "LobbyFull";
    RPCErrorCode[RPCErrorCode["PurchaseCancelled"] = 5008] = "PurchaseCancelled";
    RPCErrorCode[RPCErrorCode["PurchaseError"] = 5009] = "PurchaseError";
    RPCErrorCode[RPCErrorCode["UnauthorizedForAchievement"] = 5010] = "UnauthorizedForAchievement";
    RPCErrorCode[RPCErrorCode["RateLimited"] = 5011] = "RateLimited";
})(RPCErrorCode = exports.RPCErrorCode || (exports.RPCErrorCode = {}));
var DispatchErrorCode;
(function (DispatchErrorCode) {
    DispatchErrorCode[DispatchErrorCode["ApplicationNotFound"] = 101] = "ApplicationNotFound";
    DispatchErrorCode[DispatchErrorCode["DiskLow"] = 2022] = "DiskLow";
    DispatchErrorCode[DispatchErrorCode["DiskPermissionDenied"] = 2025] = "DiskPermissionDenied";
    DispatchErrorCode[DispatchErrorCode["RedistributableInstallFailed"] = 2026] = "RedistributableInstallFailed";
    DispatchErrorCode[DispatchErrorCode["ApplicationLoadFailed"] = 2034] = "ApplicationLoadFailed";
    DispatchErrorCode[DispatchErrorCode["DeserializationFailed"] = 2047] = "DeserializationFailed";
    DispatchErrorCode[DispatchErrorCode["Interrupted"] = 2055] = "Interrupted";
    DispatchErrorCode[DispatchErrorCode["MaxRequestRetriesExceeded"] = 2058] = "MaxRequestRetriesExceeded";
    DispatchErrorCode[DispatchErrorCode["AuthenticationFailed"] = 2063] = "AuthenticationFailed";
    DispatchErrorCode[DispatchErrorCode["IOPermissionDenied"] = 2064] = "IOPermissionDenied";
    DispatchErrorCode[DispatchErrorCode["NoManifests"] = 2065] = "NoManifests";
    DispatchErrorCode[DispatchErrorCode["PostInstallCancelled"] = 2066] = "PostInstallCancelled";
    DispatchErrorCode[DispatchErrorCode["APIError"] = 2069] = "APIError";
    DispatchErrorCode[DispatchErrorCode["FileNameTooLong"] = 2072] = "FileNameTooLong";
    DispatchErrorCode[DispatchErrorCode["NotEntitled"] = 2073] = "NotEntitled";
    DispatchErrorCode[DispatchErrorCode["ApplicationLockFailed"] = 2076] = "ApplicationLockFailed";
    DispatchErrorCode[DispatchErrorCode["NotDirectory"] = 2077] = "NotDirectory";
    DispatchErrorCode[DispatchErrorCode["InvalidDrive"] = 2078] = "InvalidDrive";
    DispatchErrorCode[DispatchErrorCode["DiskFull"] = 2080] = "DiskFull";
})(DispatchErrorCode = exports.DispatchErrorCode || (exports.DispatchErrorCode = {}));
/**
 * @source {@link https://discord.com/developers/docs/topics/opcodes-and-status-codes#voice-voice-close-event-codes|Opcodes and Status Codes}
 */
var VoiceCloseCode;
(function (VoiceCloseCode) {
    VoiceCloseCode[VoiceCloseCode["UnknownOPCode"] = 4001] = "UnknownOPCode";
    /**
     * An invalid payload was sent in your identifying to the Gateway.
     */
    VoiceCloseCode[VoiceCloseCode["DecodeFailure"] = 4002] = "DecodeFailure";
    /**
     * A payload was sent before identifying with the gateway.
     */
    VoiceCloseCode[VoiceCloseCode["NotAuthenticated"] = 4003] = "NotAuthenticated";
    /**
     * An incorrect token was sent in your identify payload.
     */
    VoiceCloseCode[VoiceCloseCode["AuthenticationFailed"] = 4004] = "AuthenticationFailed";
    VoiceCloseCode[VoiceCloseCode["AlreadyAuthenticated"] = 4005] = "AlreadyAuthenticated";
    VoiceCloseCode[VoiceCloseCode["InvalidSession"] = 4006] = "InvalidSession";
    VoiceCloseCode[VoiceCloseCode["SessionTimeout"] = 4009] = "SessionTimeout";
    VoiceCloseCode[VoiceCloseCode["ServerNotFound"] = 4011] = "ServerNotFound";
    VoiceCloseCode[VoiceCloseCode["UnknownProtocol"] = 4012] = "UnknownProtocol";
    /**
     * Channel was deleted, you were kicked, voice server changed, or the main
     * gateway session was dropped. Should not reconnect.
     */
    VoiceCloseCode[VoiceCloseCode["Disconnected"] = 4014] = "Disconnected";
    VoiceCloseCode[VoiceCloseCode["VoiceServerCrashed"] = 4015] = "VoiceServerCrashed";
    VoiceCloseCode[VoiceCloseCode["UnknownEncryptionMode"] = 4016] = "UnknownEncryptionMode";
})(VoiceCloseCode = exports.VoiceCloseCode || (exports.VoiceCloseCode = {}));
/**
 * @source {@link https://discord.com/developers/docs/topics/opcodes-and-status-codes#voice-voice-opcodes|Opcodes and Status Codes}
 */
var VoiceOPCode;
(function (VoiceOPCode) {
    /**
     * Begin a voice websocket connection. This is sent by the client.
     */
    VoiceOPCode[VoiceOPCode["Identify"] = 0] = "Identify";
    /**
     * Select the voice protocol. This is sent by the client.
     */
    VoiceOPCode[VoiceOPCode["SelectProtocol"] = 1] = "SelectProtocol";
    /**
     * Complete the websocket handshake. This is sent by the server.
     */
    VoiceOPCode[VoiceOPCode["Ready"] = 2] = "Ready";
    /**
     * Keep the websocket connection alive. This is sent by the client.
     */
    VoiceOPCode[VoiceOPCode["Heartbeat"] = 3] = "Heartbeat";
    /**
     * Describe the session. This is sent by the server.
     */
    VoiceOPCode[VoiceOPCode["SessionDescription"] = 4] = "SessionDescription";
    /**
     * Indicate which users are speaking. This is sent by the client and server.
     */
    VoiceOPCode[VoiceOPCode["Speaking"] = 5] = "Speaking";
    /**
     * Sent to acknowledge a received client heartbeat. This is sent by the
     * server.
     */
    VoiceOPCode[VoiceOPCode["HeartbeatAck"] = 6] = "HeartbeatAck";
    /**
     * Resume a connection. This is sent by the client.
     */
    VoiceOPCode[VoiceOPCode["Resume"] = 7] = "Resume";
    /**
     * Time to wait between sending heartbeats in milliseconds. This is sent by
     * the server.
     */
    VoiceOPCode[VoiceOPCode["Hello"] = 8] = "Hello";
    /**
     * Acknowledge a successful session resume. This is sent by the server.
     */
    VoiceOPCode[VoiceOPCode["Resumed"] = 9] = "Resumed";
    /**
     * A client has disconnected from the voice channel. This is sent by the
     * server.
     */
    VoiceOPCode[VoiceOPCode["ClientDisconnect"] = 13] = "ClientDisconnect";
})(VoiceOPCode = exports.VoiceOPCode || (exports.VoiceOPCode = {}));
var LobbyError;
(function (LobbyError) {
    LobbyError[LobbyError["NoError"] = 0] = "NoError";
    LobbyError[LobbyError["UnknownError"] = 1] = "UnknownError";
    LobbyError[LobbyError["ServiceUnavailable"] = 2] = "ServiceUnavailable";
    LobbyError[LobbyError["NotFound"] = 3] = "NotFound";
    LobbyError[LobbyError["InvalidSecret"] = 4] = "InvalidSecret";
    LobbyError[LobbyError["Full"] = 5] = "Full";
    LobbyError[LobbyError["LobbyLimitReached"] = 6] = "LobbyLimitReached";
    LobbyError[LobbyError["AlreadyConnecting"] = 7] = "AlreadyConnecting";
})(LobbyError = exports.LobbyError || (exports.LobbyError = {}));
